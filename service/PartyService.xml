<?xml version="1.0" encoding="UTF-8"?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">

    <service verb="find" noun="Parties" >
        <out-parameters>
            <parameter name="parties" type="list"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="Party" list="parties" />
            <if condition="!parties">
                <then>
                    <return message="No Parties Exists"/>
                </then>
            </if>
        </actions>
    </service>

    <service verb="create" noun="Party" >
    <in-parameters>
        <auto-parameters entity-name="Party" include="nonpk"/>
        <parameter name="partyType" required="true"/>
    </in-parameters>
    <out-parameters>
        <parameter name="message" />
        <parameter name="partyDetails" type="list"/>
    </out-parameters>
        <actions>
            <service-call name="create#Party" in-map="context" out-map="context"/>
            <set field="message" value="Party Added Successfully"/>
            <entity-find-one entity-name="Party" value-field="partyDetails">
                    <field-map field-name="partyId" from="partyId"/>
            </entity-find-one>

        </actions>
    </service>

    <service verb="find" noun="Party">
        <in-parameters>
            <parameter name="partyId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="party" type="list"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="Party" value-field="party"/>
            <if condition="!party">
                <then>
                    <return message="No Parties Exists with this Party Id"/>
                </then>
            </if>
        </actions>
    </service>

    <service verb="update" noun="Party1">
        <description>Update Party</description>

        <in-parameters>
            <auto-parameters entity-name="Party" />
        </in-parameters>

        <out-parameters>
            <parameter name="message" default-value="Party Updated"/>
            <parameter name="partyDetails" type="List"/>
        </out-parameters>

        <actions>

            <entity-find-one entity-name="Party" value-field="party">
                <field-map field-name="partyId" from="partyId"/>
            </entity-find-one>

            <if condition="party">
                <then>
<!--                    <return message="Party Found"/>-->
                    <set field="party.partyType" from="partyType"/>
                    <set field="party.firstName" from="firstName"/>
                    <set field="party.lastName" from="lastName"/>

                    <entity-update value-field="party"/>
                    <set field="message"  value="Party Updated Successfully"/>
                </then>
                <else>
                    <set field="message"  value="Party Not Found"/>
                </else>
            </if>
            <set field="partyDetails" from="party"/>
        </actions>
    </service>

    <service verb="delete" noun="Party1">
        <in-parameters>
            <parameter name="partyId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="message" default-value="Party Deleted Successfully"/>
        </out-parameters>

        <actions>
            <entity-find-one entity-name="Party" value-field="party"/>
<!--            <return message="hi"/>-->
            <if condition="!party">
                <return message="Party Not Found"/>
            </if>
            <entity-find-one entity-name="OrderHeader" value-field="order">
                    <field-map field-name="partyId" from="partyId"/>
            </entity-find-one>
            <if condition="order">
                <return message="Cannot delete party because it has orders"/>
            </if>

            <entity-find-one entity-name="ContactMech" value-field="contact">
                    <field-map field-name="partyId" from="partyId"/>
            </entity-find-one>
            <if condition="contact">
                <then>
                    <entity-delete-related value-field="party"  relationship-name="Party#tutorial.ContactMech"/>

                </then>
            </if>
            <entity-delete-by-condition entity-name="Party" >
                <econdition field-name="partyId"/>
            </entity-delete-by-condition>
            <set field="message" value="Party Deleted Successfully"/>

        </actions>
    </service>

</services>