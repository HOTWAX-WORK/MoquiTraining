<?xml version="1.0" encoding="UTF-8"?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">

    <service verb="find" noun="Products" >
        <out-parameters>
            <parameter name="products" type="list"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="Product" list="products" />
            <if condition="!products">
                <then>
                    <return message="No products Exists"/>
                </then>
            </if>
        </actions>
    </service>

    <service verb="create" noun="Products" >
        <in-parameters>
            <auto-parameters entity-name="Product" include="nonpk"/>
        </in-parameters>
        <out-parameters>
            <parameter name="message" />
            <parameter name="productInfo" type="list"/>
        </out-parameters>
        <actions>
            <service-call name="create#Product" in-map="context" out-map="context"/>
            <set field="message" value="Product Added Successfully"/>
            <entity-find-one entity-name="Product" value-field="productInfo">
                <field-map field-name="productId" from="productId"/>
            </entity-find-one>

        </actions>
    </service>

    <service verb="find" noun="ProductSingle">
        <in-parameters>
            <parameter name="productId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="product" type="list"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="Product" value-field="product"/>
            <if condition="!product">
                <then>
                    <return message="No product Exists with this product Id"/>
                </then>
            </if>
        </actions>
    </service>

    <service verb="update" noun="Products">
        <description>Update Product</description>

        <in-parameters>
            <auto-parameters entity-name="Product" />
        </in-parameters>

        <out-parameters>
            <parameter name="message" default-value="Product Updated"/>
            <parameter name="productDetails" type="List"/>
        </out-parameters>

        <actions>

            <entity-find-one entity-name="Product" value-field="product">
                <field-map field-name="productId" from="productId"/>
            </entity-find-one>

            <if condition="product">
                <then>
                    <set field="product.size" from="size"/>
                    <set field="product.color" from="color"/>
                    <set field="product.productName" from="productName"/>

                    <entity-update value-field="product"/>
                    <set field="message"  value="Product Updated Successfully"/>
                </then>
                <else>
                    <set field="message"  value="Product Not Found"/>
                </else>
            </if>
            <set field="productDetails" from="product"/>
        </actions>
    </service>

    <service verb="delete" noun="Product">
    <in-parameters>
        <parameter name="productId" required="true"/>
    </in-parameters>
    <out-parameters>
        <parameter name="message" default-value="Product Deleted Successfully"/>
    </out-parameters>
    <actions>
        <entity-find-one entity-name="Product" value-field="productInfo"/>
        <if condition="productInfo">
            <then>
                <entity-delete-related value-field="productInfo"  relationship-name="Product#tutorial.OrderItem"/>
                <entity-delete-by-condition entity-name="Product" >
                    <econdition field-name="productId"/>
                </entity-delete-by-condition>
                <set field="message" value="Product Deleted Successfully"/>
            </then>
            <else>
                <set field="message" value="Product Not Found"/>
            </else>
        </if>
    </actions>
</service>

</services>
