<?xml version="1.0" encoding="UTF-8"?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">

    <service verb="create" noun="MoquiTraining" type="entity-auto">
        <in-parameters>
            <auto-parameters entity-name="MoquiTraining" include="nonpk"/>
            <parameter name="trainingName" required="true"/>
            <parameter name="trainingDate" required="true"/>
        </in-parameters>
        <out-parameters><parameter name="trainingId"/></out-parameters>
    </service>

    <service verb="create" noun="MoquiTrainingDefaultInline">
        <in-parameters>
            <parameter name="trainingName" required="true"/>
            <parameter name="trainingDate" format="MM/DD/YYYY" required="true" type="String"/>
<!--                <time-range after="now" format="mm/dd/yyyy"/></parameter>-->
            <parameter name="trainingPrice"/>
            <parameter name="trainingDuration"/>
        </in-parameters>
        <out-parameters>
            <parameter name="trainingId"/>
        </out-parameters>
        <actions>
            <service-call name="create#MoquiTraining" in-map="context" out-map="context"/>
            <set field="trainingDate" type="Date" />
            <message type="success" >Created Successfully</message>
        </actions>
    </service>

    <service verb="create" noun="MoquiTrainingGroovy">
        <in-parameters>
            <parameter name="trainingName" required="true"/>
            <parameter name="trainingDate" format="MM/DD/YYYY" required="true" type="String"/>
<!--                <time-range after="now" format="mm/dd/yyyy"/></parameter>-->
            <parameter name="trainingPrice"/>
            <parameter name="trainingDuration"/>
        </in-parameters>
        <out-parameters>
            <parameter name="trainingId"/>
        </out-parameters>
        <actions>
            <script>
                def training = ec.entity.makeValue("MoquiTraining")
                training.setFields(context, true, null, null)
                training.setSequencedIdPrimary()
                training.create()
                context.trainingId = training.trainingId
            </script>
            <set field="trainingDate" type="Date"/>
            <message type="success" >Created Successfully</message>
        </actions>
    </service>

    <service verb="create" noun="Training" type="script" authenticate="anonymous-view" location="component://moqui-training/service/test.groovy">
        <description>Create a training record with business logic</description>
        <in-parameters>
            <parameter name="trainingName" required="true"/>
            <parameter name="trainingDate"  required="true"/>
            <parameter name="trainingPrice"  required="true"/>
            <parameter name="trainingDuration" />
        </in-parameters>
        <out-parameters>
            <parameter name="trainingId" type="id"/>
        </out-parameters>

    </service>

    <service verb="find" noun="TrainingDetail">
        <in-parameters>
            <parameter name="trainingId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="trainingInfo" type="list"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="MoquiTraining" list="trainingInfo">
                <econdition field-name="trainingId"/>
                <select-field field-name="trainingName,trainingId,trainingDate"/>
            </entity-find>
        </actions>
    </service>

    <service verb="store" noun="MoquiTrainingUpdate">
        <description>Create or update MoquiTraining records based on trainingName or trainingId.</description>

        <in-parameters>
            <parameter name="trainingId" required="true"/>
            <parameter name="trainingName" required="true"/>
            <parameter name="trainingDate" required="true"/>
            <auto-parameters entity-name="MoquiTraining" include="nonpk"/>
        </in-parameters>

        <out-parameters>
            <parameter name="trainingId"/>
        </out-parameters>

        <actions>

<!--            <if condition="context.trainingId">-->
<!--                <then>-->
<!--                    <entity-find-one entity-name="MoquiTraining" value-field="existingRecord">-->
<!--                        <field-map field-name="trainingId" from="trainingId"/>-->
<!--                    </entity-find-one>-->
<!--                </then>-->
<!--                <else>-->
<!--                    <entity-find-one entity-name="MoquiTraining" value-field="existingRecord">-->
<!--                        <field-map field-name="trainingName" from="trainingName"/>-->
<!--                    </entity-find-one>-->
<!--                </else>-->
<!--            </if>-->

            <entity-find-one entity-name="MoquiTraining" value-field="existingRecord">
                <field-map field-name="trainingId" from="trainingId"/>
            </entity-find-one>
            <if condition="existingRecord">
                <then>

                    <set field="existingRecord.trainingDate" from="trainingDate"/>
                    <set field="existingRecord.trainingName" from="trainingName"/>
                    <set field="existingRecord.trainingPrice" from="trainingPrice"/>
                    <set field="existingRecord.trainingDuration" from="trainingDuration"/>
                    <entity-update value-field="existingRecord"/>
                    <set field="trainingId" from="existingRecord.trainingId"/>
                </then>
                <else>
                    <service-call name="create#MoquiTraining" in-map="context" out-map="context"/>
                </else>

            </if>
<!--            <set-result name="trainingId" from="trainingId"/>-->
            <message type="success">Created or Updated Successfully</message>
        </actions>
    </service>

</services>